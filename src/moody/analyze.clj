(ns moody.analyze
  (:require [moody.data_prep :as prep]))

(defn sentiment-probability
  [bag sentiment]
  (/ (sentiment bag) (:num-docs bag))
  )

(defn token-probability
  [token bag sentiment]
  (if (contains? bag token)
    (/ (get-in bag [token sentiment]) (reduce + (map #(get-in bag [% :negative]) (filter string? (keys bag)))))
    1)
  )

(defn doc-sentiment-probability
  [document bag sentiment]
  (/ (reduce * (map #(token-probability % bag sentiment) (prep/tokenize-sentence document (:token_size bag))))
     (sentiment-probability bag sentiment))
  )

(defn nb-classifier
  "Classifies a document given a bag of words generated by training.
   The algorithm is based on Bayes' Rule: P( c | d ) = [ P( d | c ) x P( c ) ] / [ P( d ) ]"
  [bag sentiment_map document ]
  (key (apply max-key val
   (reduce #(assoc %1 %2 (doc-sentiment-probability document bag %2))
             {}
             (vals sentiment_map)
           )
   ))
  )

